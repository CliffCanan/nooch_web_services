//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nooch.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NOOCHEntities : DbContext
    {
        public NOOCHEntities()
            : base("name=NOOCHEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminUser> AdminUsers { get; set; }
        public virtual DbSet<GeoLocation> GeoLocations { get; set; }
        public virtual DbSet<Landlord> Landlords { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<MemberPrivacySetting> MemberPrivacySettings { get; set; }
        public virtual DbSet<MembersIPAddress> MembersIPAddresses { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<PropertyUnit> PropertyUnits { get; set; }
        public virtual DbSet<SocialMediaPost> SocialMediaPosts { get; set; }
        public virtual DbSet<Tenant> Tenants { get; set; }
        public virtual DbSet<MemberNotification> MemberNotifications { get; set; }
        public virtual DbSet<AuthenticationToken> AuthenticationTokens { get; set; }
        public virtual DbSet<InviteCode> InviteCodes { get; set; }
        public virtual DbSet<SynapseBankLoginResult> SynapseBankLoginResults { get; set; }
        public virtual DbSet<SynapseBanksOfMember> SynapseBanksOfMembers { get; set; }
        public virtual DbSet<SynapseCreateUserResult> SynapseCreateUserResults { get; set; }
        public virtual DbSet<SynapseIdVerificationQuestion> SynapseIdVerificationQuestions { get; set; }
        public virtual DbSet<SynapseSupportedBank> SynapseSupportedBanks { get; set; }
        public virtual DbSet<TenantsIdDocument> TenantsIdDocuments { get; set; }
        public virtual DbSet<UnitsOccupiedByTenant> UnitsOccupiedByTenants { get; set; }
        public virtual DbSet<SDNSearchResult> SDNSearchResults { get; set; }
        public virtual DbSet<PasswordResetRequest> PasswordResetRequests { get; set; }
        public virtual DbSet<SynapseAddTransactionResult> SynapseAddTransactionResults { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionsStatusAtSynapse> TransactionsStatusAtSynapses { get; set; }
    
        public virtual ObjectResult<GetMostFrequentFriends_Result> GetMostFrequentFriends(string memberId)
        {
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMostFrequentFriends_Result>("GetMostFrequentFriends", memberIdParameter);
        }
    
        public virtual ObjectResult<string> GetReportsForMember(string memberId, string getWhat)
        {
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var getWhatParameter = getWhat != null ?
                new ObjectParameter("GetWhat", getWhat) :
                new ObjectParameter("GetWhat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetReportsForMember", memberIdParameter, getWhatParameter);
        }
    
        public virtual ObjectResult<GetLocationSearch_Result> GetLocationSearch(string memberId, Nullable<int> radius)
        {
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var radiusParameter = radius.HasValue ?
                new ObjectParameter("Radius", radius) :
                new ObjectParameter("Radius", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationSearch_Result>("GetLocationSearch", memberIdParameter, radiusParameter);
        }
    
        public virtual ObjectResult<SDNSearchResult> pGetSDNListing(string searchtext)
        {
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SDNSearchResult>("pGetSDNListing", searchtextParameter);
        }
    
        public virtual ObjectResult<SDNSearchResult> pGetSDNListing(string searchtext, MergeOption mergeOption)
        {
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SDNSearchResult>("pGetSDNListing", mergeOption, searchtextParameter);
        }
    }
}
